apache tomcat:

Answer: Apache Tomcat is basically a Web Server and Servlet system which is an open-source (i.e. freely available on the internet) and is 
created by Apache Software Foundation. It is the server mostly used by Java Developers.

Ours is a web based application which can be opened by url and exe..
Two types of servers:
Application and Webservers




Q #2) Why do we require Apache Tomcat?

Answer: It is required to run Java Web Applications on the host and server-based systems. It also helps to run JSP and Servlets.

Q #4) What is the name of inbuilt Web Container in Tomcat?

Answer: The name of the inbuilt Web Container in Tomcat is Catalina which is present in the bin directory.

Catalina is used for loading all the requests related to HTTP and can instantiate the objects of GET () and POST () methods.

Q #8) Which is the vital configuration file that is used in Apache Tomcat?

Answer: The vital configuration file that is used in Apache Tomcat is httpd.conf

Q #9) How do you find which version of Apache Tomcat web server is running?

Answer: The best way to find the currently running version is stated below:

Sign in to the web-server
Go to apache instance and bin folder
Run “httpd -v” command to get version detail.


Q #10) Explain the types of connectors used by Apache Tomcat.

Answer: Apache Tomcat basically uses two types of connectors which are as follows:

HTTP Connectors: HTTP connectors possess attributes which can be modified to determine exactly how it works and access functions such as redirects and proxy forwarding.
AJP Connectors: AJP connectors follow the AJP protocol in place the of HTTP but work just same as HTTP connectors. They are implemented in Apache Tomcat through the plug-in technology mod_jk.

Q #11) Mention the configuration files of Catalina.

Answer: The configurations files of Catalina include:

XML
Properties
Policy
Tomcat-users.xml

Q #16) What do you mean by MAC?

Answer: MAC is defined as Medium Access Control.
Q #18) What is the result of Select * from the tab?

Answer: This query would display all the tables that are stored in the database.

Q #19) What is the function of Listen in Apache Tomcat?

Answer: Listen plays a vital role for Apache Tomcat and the developers.

Suppose a developer is having multiple IP’s on the server, so if we wish that the Apache should consider only a specified IP then we need to explicitly mention IP and PORT in the Listen Drive.

Q #20) What are the different ways in which we can secure the websites hosted on Tomcat Server?

Answer: There are multiple ways to do it and some of them are mentioned below:

Implementing SSL
Make use of Cloud-based security provider.
Integrating with Web Application Firewall.
Q #21) Do Apache Tomcat generate Log files? If yes name them?

Answer: Yes, Apache Tomcat generates Log files.

Basically, there are two important Log Files that are generated by Apache Tomcat.

They are as follows:

Access.log
Error.log

Q #22) How do you justify the significance of Virtual Hosting?

Answer: The concept of virtual hosting plays an important role by allowing to host several websites on a single object.

Virtual hosting can be of IP based and Name based.

Name-Based Virtual Host: It refers that multiple hosts are running on each IP address.
 IP Based Virtual Host: It refers that a different IP address exists for each website served.
Name-Based Virtual Host is widely used everywhere.

Q #23) What are the check or log extent provided by Apache Tomcat?

Answer: There are a plenty of check levels provided and out of which “warn” is the default level.

Info
Debug
Warn
Notice
Crit
Alarm
Emerg
Error

Q #24) How is Apache Tomcat different from Apache Web Server?

Answer: Apache Tomcat is used to host the web contents whereas Apache Web server is an HTTP server that is built to serve the static contents.

There is always a possibility to integrate Apache Tomcat and Apache Web Server.

Q #26) Where are the logs of Apache Tomcat stored?

Answer:

The path is as mentioned below:

Cd/ var/ log/ httpd

Q #30) Can we serve Content out of a directory other than the Document Root directory?

Answer: Yes, it is possible to serve the Content out of a directory other than the Document Root directory with the help of “Alias” command.

Q #31) What should we do if we want to know which users are reaching our site?

Answer: We can add the following Log to our activity log format.

%{Referer}

Q #32) Is there any chance to cache files which are viewed frequently?

Answer: Yes, there is a chance to cache files which are viewed frequently by using

Mod_file_cache module.

Q #33) How can we put a restriction to upload files on our web server?

Answer: Yes, we can restrict the user to upload files on our web server by using the “LimitRequestBody” directive.

Example: LimitRequestBody 20000

Now I have put a limit of 20000 files, so when this mark is reached then the user will not be able to upload any more files in the server.

Q #36) Apache runs as which user and what is the location of the main configuration file?

Answer: Apache runs with a user “nobody” and httpd daemon.

The location of the main configuration file is:

# /etc/httpd/conf/httpd.conf
# /etcapache2.conf

2) Mention what is the output of select * from tab?

It displays the default tables in the database


13) Explain how servlet life cycles?

The life-cycle of a typical servlet running on Tomcat

Tom-cat receives a request from a client through one of its connectors
For processing, this request Tomcat maps this request to appropriate
Once the request has been directed to the appropriate servlet, Tomcat verifies that servlet class has been loaded. If it is not than Tomcat wraps the servlet into Java Bytecode, that is executable by the JVM and forms an instance of the servlet
Tomcat initiates the servlet by calling its init The servlet contains code that is able to screen Tomcat configuration files and act accordingly, as well as declare any resources it might require
Once the servlet has been started, Tomcat can call the servlet’s service method to proceed the request
Tomcat and the servlet can co-ordinate or communicate through the use of listener classes during the servlet’s lifecycle, which tracks the servlet for a variety of state changes.
To remove the servlet, Tomcat calls the servlets destroy method.